
<style>

.link {
  stroke: #ccc;
}

.node text {
  pointer-events: none;
  font: 10px sans-serif;
}

</style>

<!-- load the d3.js library -->
<script src="/js/d3.v3.min.js"></script>

<script>
    $(document).ready(function() {
        $.get("/api/cluster/{{.clusterName}}", function(instances) {
            visualizeInstances(instances);
        }, "json" );
        
        function getInstanceId(host, port) {
            return "instance" + host.replace(/[.]/g, "_") + "__" + port
        }
        
        function visualizeInstances(instances) {
        	
            var nodes = [];
            var links = [];
            
            instances.forEach(function(instance) {
            	var hasMaster = (instance.MasterKey.Hostname != "" && instance.MasterKey.Port > 0);
            
            	nodes.push({
            		id: getInstanceId(instance.Key.Hostname, instance.Key.Port),
            		hasMaster: hasMaster,
            		master: getInstanceId(instance.MasterKey.Hostname, instance.MasterKey.Port),
            		hostname: instance.Hostname,
            		port: instance.Port,
                    name: "hin",
                    text: "hit",
                    label: "hil",
                    title: "hitl"
            	});
            	if (hasMaster) {
            		links.push({
            			source: getInstanceId(instance.MasterKey.Hostname, instance.MasterKey.Port), 
            			target: getInstanceId(instance.Key.Hostname, instance.Key.Port)
            		});            		
            	}
            });
            
        
        	var width = window.innerWidth,
            height = window.innerHeight;

            var color = d3.scale.category20();

            var force = d3.layout.force()
	            .linkDistance(40)
	            .linkStrength(2)
	            .charge(-120)
	            .size([width, height]);

            var svg = d3.select("body").append("svg")
	            .attr("width", width)
	            .attr("height", height);
            
            d3.json(null, function(error) {
                force.nodes(nodes).links(links).start();
	            var link = svg.selectAll(".link")
	                 .data(links)
	                 .enter().append("line")
	                 .attr("fill", "none")
	                 .attr("class", "link");
	
	            var node = svg.selectAll(".node")
	                 .data(nodes)
	                 .enter().append("circle")
	                 .attr("class", "node")
	                 .attr("r", 5)
	                 .style("fill", "#4682B4" )
	                 .call(force.drag);
	            node.append("title").text(function(d) { 
	            	return d.label; 
	            });
	            node.append("text")
	            .attr("dx", 12)
	            .attr("dy", ".35em")
	            .text(function(d) { alert(d.id);return d.id });

	            force.on("tick", function() {
					link.attr("x1", function(d) { return d.source.x; })
					.attr("y1", function(d) { return d.source.y; })
					.attr("x2", function(d) { return d.target.x; })
					.attr("y2", function(d) { return d.target.y; });
					
					node.attr("cx", function(d) { return d.x; })
					.attr("cy", function(d) { return d.y; });
	            }); 
            });
        }
    });            
</script>